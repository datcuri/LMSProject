/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Controller.ControllerChitietphieumuon;
import Controller.ControllerDangnhap;
import Controller.ControllerDocgia;
import Controller.ControllerPhieumuon;
import Controller.ControllerSach;
import Controller.ControllerThongke;
import Controller.ControllerThuthu;
import Dao.Connect;
import Model.ChitietPhieuMuon;
import java.util.List;

import Model.DocGia;
import Model.Phieumuon;
import Model.Sach;
import Model.Taikhoan;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;

import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;

import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableRowSorter;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.ButtonGroup;

/**
 *
 * @author UKiel
 */
public final class GUI_ThuThu extends javax.swing.JFrame {

    ControllerSach CtrSach = new ControllerSach();
    ControllerPhieumuon CtrPM = new ControllerPhieumuon();
    ControllerDocgia CtrDG = new ControllerDocgia();
    ControllerChitietphieumuon CtrCTPM = new ControllerChitietphieumuon();
    ControllerThuthu CtrTT = new ControllerThuthu();
    ControllerDangnhap CtrDN = new ControllerDangnhap();
    ControllerThongke CtrTK = new ControllerThongke();

    boolean check = false;
    int open = 0;

    int intSach = 0;
    int intDG = 0;

    String maThuThu = "";
    String maPMdcchon = "";

    /**
     * Creates new form GUI_ThuThu
     *
     * @param maTaikhoan
     */
    public GUI_ThuThu(String maTaikhoan) {
        initComponents();

        maThuThu = CtrTT.CtrgetTTbymaTaikhoan(maTaikhoan).getMaThuthu();
        // Chạy giao diện Quản lý Sách    
        loadmaDanhMuc();
        loadmaTheLoai();

        lockSach(false);
        tfmaSach.setEnabled(false);
        filldataTableSach();
        lockbtnSach(false);
        setHeaderTbl(TableSach);

        // Chạy giao diện Quản lý Phiếu mượn
        // Tab Phiếu mượn
        filldataTableDSPhieumuon();
        loadcbmaDocgia_PM();
        setHeaderTbl(TableDSPhieumuon);
        tfmaSach.setText(TaomaSachmoi());

        // Tab Chi tiết phiếu mượn
        loadcbmaSach_CTPM();

        tfTienphat.setText("0");
        setHeaderTbl(TableCTphieumuon);
        dcNgaytrathucte.setEnabled(false);

        //Chạy giao diện quản lý độc giả 
        btnGender = new ButtonGroup();
        khoamuonthem();
        tfMaTK.setEnabled(false);
        tfMaDocgia.setEnabled(false);
        filldataTableDocgia();
        setgenderbutton();
        setHeaderTbl(tblDocgia);
        lockbtnDG(false);
        lockDG(false);
        khoamuonthem();
        lockbtnCTPM(false);

        // Chạy biến lỗi    
        check = true;

    }

    public java.sql.Date getSQLdate(java.util.Date time) {
        java.sql.Date sqldate = new java.sql.Date(time.getTime());

        return sqldate;
    }

    public String getSQLDateform(java.sql.Date time) {
        if (time != null) {
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                return sdf.format(time);
            } catch (Exception e) {
            }
        }
        return null;
    }

    public java.util.Date Tinhngaytradukien(java.util.Date Time, int days) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Calendar c = Calendar.getInstance();
            c.setTime(Time); // Using today's date
            c.add(Calendar.DATE, days); // Adding 5 days
            String output = sdf.format(c.getTime());
            return (java.util.Date) sdf.parse(output);
        } catch (ParseException e) {
        }
        return null;

    }

    public void setHeaderTbl(javax.swing.JTable tbl) {
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) tbl.getTableHeader().getDefaultRenderer();
        renderer.setHorizontalAlignment(0);
        tbl.getTableHeader().setFont(new Font("Times New Roman", Font.BOLD, 18));
        tbl.setRowHeight(30);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ooo = new javax.swing.JPanel();
        btnDangsuat = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableSach = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tfmaSach = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfDanhmuc = new javax.swing.JTextField();
        tftenSach = new javax.swing.JTextField();
        cbDanhmuc = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        tftheloai = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbTheloai = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        tfNhaxuatban = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfNamsuatban = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tfSoluong = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tpMota = new javax.swing.JTextPane();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tfTacgia = new javax.swing.JTextField();
        btnThemSach = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        Jcollpane = new javax.swing.JScrollPane();
        TableDSPhieumuon = new javax.swing.JTable();
        btnThemphieumuon = new javax.swing.JButton();
        btnHienthiCTpm = new javax.swing.JButton();
        btnGhichu = new javax.swing.JButton();
        cbMaDocgia_PM = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        tftenDocGia_PM = new javax.swing.JTextField();
        cbSongaymuon = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableCTphieumuon = new javax.swing.JTable();
        dcNgaytrathucte = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnCapnhat = new javax.swing.JButton();
        btnMuonthem = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        lbMaCTphieumuon = new javax.swing.JLabel();
        cbMaSach_CTPM = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        tfTenSachCTpm = new javax.swing.JTextField();
        dcNgaymuon = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        btnLammoiCTpm = new javax.swing.JButton();
        btnXoamuon = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        cbTinhtrangSach = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        cbXacnhanmuon = new javax.swing.JComboBox<>();
        btnXacnhan = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        tfTienphat = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        dcNgaytradukien = new com.toedter.calendar.JDateChooser();
        tfTienphatmuon = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDocgia = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        tfMaDocgia = new javax.swing.JTextField();
        tftenDocgia = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        RdoNu = new javax.swing.JRadioButton();
        tfDG_Mail = new javax.swing.JTextField();
        tfDG_SDT = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        dcNgaysinh = new com.toedter.calendar.JDateChooser();
        jPanel9 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        tfMaTK = new javax.swing.JTextField();
        tfTaikhoan = new javax.swing.JTextField();
        tfMatkhau = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        rdoCam = new javax.swing.JRadioButton();
        jLabel36 = new javax.swing.JLabel();
        tfLuotmuon = new javax.swing.JTextField();
        btnCam = new javax.swing.JButton();
        btnSuaDG = new javax.swing.JButton();
        btnThemDocgia = new javax.swing.JButton();
        btnLammoiDG = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        cbTKDG = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblTK = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ THƯ VIỆN");

        ooo.setBackground(new java.awt.Color(90, 185, 234));

        btnDangsuat.setBackground(new java.awt.Color(255, 255, 204));
        btnDangsuat.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnDangsuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/login.png"))); // NOI18N
        btnDangsuat.setText("ĐĂNG XUẤT");
        btnDangsuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangsuatActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 0, 102));
        jLabel37.setText("ĐẠI HỌC CÔNG NGHỆ THÔNG TIN VÀ TRUYỀN THÔNG VIỆT HÀN");

        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/VKU.png"))); // NOI18N

        jLabel39.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(0, 0, 102));
        jLabel39.setText("QUẢN LÝ THƯ VIỆN");

        javax.swing.GroupLayout oooLayout = new javax.swing.GroupLayout(ooo);
        ooo.setLayout(oooLayout);
        oooLayout.setHorizontalGroup(
            oooLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, oooLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(oooLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(oooLayout.createSequentialGroup()
                        .addGap(339, 339, 339)
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(oooLayout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDangsuat, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        oooLayout.setVerticalGroup(
            oooLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oooLayout.createSequentialGroup()
                .addGroup(oooLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(oooLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(oooLayout.createSequentialGroup()
                        .addGroup(oooLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(oooLayout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(btnDangsuat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(oooLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel39)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 38, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(132, 206, 235));

        TableSach.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        TableSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sách", "Tên Sách", "Mã Danh Mục", "Mã Thể loại", "Tác giả", "Nhà xuất bản", "Năm Xuất Bản", "Số lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableSach);
        if (TableSach.getColumnModel().getColumnCount() > 0) {
            TableSach.getColumnModel().getColumn(0).setPreferredWidth(50);
            TableSach.getColumnModel().getColumn(1).setPreferredWidth(180);
            TableSach.getColumnModel().getColumn(2).setPreferredWidth(80);
            TableSach.getColumnModel().getColumn(3).setPreferredWidth(80);
            TableSach.getColumnModel().getColumn(4).setPreferredWidth(80);
            TableSach.getColumnModel().getColumn(5).setPreferredWidth(120);
            TableSach.getColumnModel().getColumn(6).setPreferredWidth(50);
            TableSach.getColumnModel().getColumn(7).setPreferredWidth(20);
        }

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Mã Sách ");

        tfmaSach.setBackground(new java.awt.Color(255, 255, 204));
        tfmaSach.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tfmaSach.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Tên Sách ");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        tfDanhmuc.setEditable(false);
        tfDanhmuc.setBackground(new java.awt.Color(255, 255, 204));
        tfDanhmuc.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tftenSach.setBackground(new java.awt.Color(255, 255, 204));
        tftenSach.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tftenSach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tftenSachKeyPressed(evt);
            }
        });

        cbDanhmuc.setBackground(new java.awt.Color(255, 255, 204));
        cbDanhmuc.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cbDanhmuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DM001", "DM002", "DM003", "DM004" }));
        cbDanhmuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDanhmucActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Danh mục");

        tftheloai.setEditable(false);
        tftheloai.setBackground(new java.awt.Color(255, 255, 204));
        tftheloai.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Thể loại");

        cbTheloai.setBackground(new java.awt.Color(255, 255, 204));
        cbTheloai.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cbTheloai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TL001", "TL002", "TL003", "TL004", "TL005", "TL006" }));
        cbTheloai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTheloaiActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Nhà xuất bản");

        tfNhaxuatban.setBackground(new java.awt.Color(255, 255, 204));
        tfNhaxuatban.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Năm xuất bản");

        tfNamsuatban.setBackground(new java.awt.Color(255, 255, 204));
        tfNamsuatban.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Số lượng");

        tfSoluong.setBackground(new java.awt.Color(255, 255, 204));
        tfSoluong.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tpMota.setBackground(new java.awt.Color(255, 255, 204));
        tpMota.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jScrollPane2.setViewportView(tpMota);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setText("Mô tả ");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel11.setText("Tác giả ");

        tfTacgia.setBackground(new java.awt.Color(255, 255, 204));
        tfTacgia.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        btnThemSach.setBackground(new java.awt.Color(255, 255, 204));
        btnThemSach.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnThemSach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/ThemSach.png"))); // NOI18N
        btnThemSach.setText("  SÁCH MỚI");
        btnThemSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSachActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(255, 255, 204));
        btnEdit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/capnhatsach.png"))); // NOI18N
        btnEdit.setText("   SỬA SÁCH");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 255, 204));
        btnDelete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/xóa.png"))); // NOI18N
        btnDelete.setText("   XÓA SÁCH");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(255, 255, 204));
        btnRefresh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/refresh.png"))); // NOI18N
        btnRefresh.setText("  LÀM MỚI");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("DANH SÁCH QUẢN LÝ SÁCH ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThemSach, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfmaSach)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(tfNamsuatban, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbDanhmuc, javax.swing.GroupLayout.Alignment.LEADING, 0, 190, Short.MAX_VALUE)
                                            .addComponent(cbTheloai, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tfSoluong, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                                            .addComponent(tftheloai, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                                            .addComponent(tfDanhmuc, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addComponent(tftenSach))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tfTacgia, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(tfNhaxuatban)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 325, Short.MAX_VALUE)))))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfNhaxuatban, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(tfTacgia, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfmaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tftenSach, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfDanhmuc, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cbDanhmuc, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbTheloai, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tftheloai, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tfNamsuatban)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tfSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnThemSach, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("QUẢN LÝ SÁCH  ", new javax.swing.ImageIcon(getClass().getResource("/Imgs/Quanlysach.png")), jPanel1); // NOI18N

        jTabbedPane2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(132, 206, 235));
        jPanel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/DSPhieumuon.png"))); // NOI18N
        jLabel12.setText("DANH SÁCH ĐĂNG KÝ PHIẾU MƯỢN ");

        TableDSPhieumuon.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        TableDSPhieumuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã phiếu mượn", "Mã độc giả", "Mã thủ thư", "Số ngày mượn", "Ghi Chú", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Jcollpane.setViewportView(TableDSPhieumuon);
        if (TableDSPhieumuon.getColumnModel().getColumnCount() > 0) {
            TableDSPhieumuon.getColumnModel().getColumn(0).setPreferredWidth(100);
            TableDSPhieumuon.getColumnModel().getColumn(1).setPreferredWidth(100);
            TableDSPhieumuon.getColumnModel().getColumn(2).setPreferredWidth(100);
            TableDSPhieumuon.getColumnModel().getColumn(3).setPreferredWidth(85);
            TableDSPhieumuon.getColumnModel().getColumn(4).setPreferredWidth(300);
            TableDSPhieumuon.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        btnThemphieumuon.setBackground(new java.awt.Color(255, 255, 204));
        btnThemphieumuon.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnThemphieumuon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/hienthiPM.png"))); // NOI18N
        btnThemphieumuon.setText("THÊM PHIẾU MƯỢN");
        btnThemphieumuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemphieumuonActionPerformed(evt);
            }
        });

        btnHienthiCTpm.setBackground(new java.awt.Color(255, 255, 204));
        btnHienthiCTpm.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnHienthiCTpm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/hienthi.png"))); // NOI18N
        btnHienthiCTpm.setText("   HIỂN THỊ TRONG CHI TIẾT PHIẾU MƯỢN");
        btnHienthiCTpm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienthiCTpmActionPerformed(evt);
            }
        });

        btnGhichu.setBackground(new java.awt.Color(255, 255, 204));
        btnGhichu.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnGhichu.setText("GHI CHÚ");
        btnGhichu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGhichuActionPerformed(evt);
            }
        });

        cbMaDocgia_PM.setBackground(new java.awt.Color(255, 255, 204));
        cbMaDocgia_PM.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cbMaDocgia_PM.setForeground(new java.awt.Color(0, 0, 0));
        cbMaDocgia_PM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbMaDocgia_PM.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMaDocgia_PMItemStateChanged(evt);
                cbMaDocgia_PMItemStateChanged2(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel17.setText("Độc Giả :");

        tftenDocGia_PM.setBackground(new java.awt.Color(255, 255, 204));
        tftenDocGia_PM.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        cbSongaymuon.setBackground(new java.awt.Color(255, 255, 204));
        cbSongaymuon.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cbSongaymuon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "7", "14", "21", "28" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tftenDocGia_PM, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbMaDocgia_PM, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbSongaymuon, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 476, Short.MAX_VALUE))
                    .addComponent(Jcollpane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnHienthiCTpm, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGhichu, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnThemphieumuon, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tftenDocGia_PM, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbSongaymuon, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbMaDocgia_PM, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addComponent(Jcollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnThemphieumuon, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                        .addComponent(btnGhichu, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))
                    .addComponent(btnHienthiCTpm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        jTabbedPane2.addTab("Phiếu mượn", jPanel3);

        jPanel4.setBackground(new java.awt.Color(132, 206, 235));

        TableCTphieumuon.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        TableCTphieumuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sách", "Tên sách", "Ngày mượn", "Ngày trả dự kiến", "Ngày trả thực tế", "Tiền phạt", "Tình Trạng Sách", "Xét duyệt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableCTphieumuon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableCTphieumuonMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TableCTphieumuon);
        if (TableCTphieumuon.getColumnModel().getColumnCount() > 0) {
            TableCTphieumuon.getColumnModel().getColumn(0).setPreferredWidth(70);
            TableCTphieumuon.getColumnModel().getColumn(1).setPreferredWidth(300);
            TableCTphieumuon.getColumnModel().getColumn(2).setPreferredWidth(150);
            TableCTphieumuon.getColumnModel().getColumn(3).setPreferredWidth(150);
            TableCTphieumuon.getColumnModel().getColumn(4).setPreferredWidth(150);
            TableCTphieumuon.getColumnModel().getColumn(5).setPreferredWidth(100);
            TableCTphieumuon.getColumnModel().getColumn(6).setPreferredWidth(150);
            TableCTphieumuon.getColumnModel().getColumn(7).setResizable(false);
            TableCTphieumuon.getColumnModel().getColumn(7).setPreferredWidth(125);
        }

        dcNgaytrathucte.setDateFormatString("dd-MM-yyyy");
        dcNgaytrathucte.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dcNgaytrathucte.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dcNgaytrathuctePropertyChange(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel14.setText("Mã Sách");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel15.setText("Ngày trả thức tế ");

        btnCapnhat.setBackground(new java.awt.Color(255, 255, 204));
        btnCapnhat.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnCapnhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/capnhatsach.png"))); // NOI18N
        btnCapnhat.setText("   CÂP NHẬT ");
        btnCapnhat.setToolTipText("");
        btnCapnhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapnhatActionPerformed(evt);
            }
        });

        btnMuonthem.setBackground(new java.awt.Color(255, 255, 204));
        btnMuonthem.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnMuonthem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/ThemSach.png"))); // NOI18N
        btnMuonthem.setText("  MƯỢN THÊM");
        btnMuonthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMuonthemActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/Phieumuon.png"))); // NOI18N
        jLabel16.setText("CHI TIẾT PHIẾU MƯỢN :");

        lbMaCTphieumuon.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        cbMaSach_CTPM.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cbMaSach_CTPM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbMaSach_CTPM.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMaSach_CTPMItemStateChanged(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel18.setText("Tên Sách");

        tfTenSachCTpm.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tfTenSachCTpm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfTenSachCTpmKeyPressed(evt);
            }
        });

        dcNgaymuon.setDateFormatString("dd-MM-yyyy");
        dcNgaymuon.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dcNgaymuon.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dcNgaymuonPropertyChange(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel19.setText("Ngày mượn");

        btnLammoiCTpm.setBackground(new java.awt.Color(255, 255, 204));
        btnLammoiCTpm.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnLammoiCTpm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/refresh.png"))); // NOI18N
        btnLammoiCTpm.setText("    LÀM MỚI");
        btnLammoiCTpm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLammoiCTpmActionPerformed(evt);
            }
        });

        btnXoamuon.setBackground(new java.awt.Color(255, 255, 204));
        btnXoamuon.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnXoamuon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/xóa.png"))); // NOI18N
        btnXoamuon.setText("     XÓA MƯỢN");
        btnXoamuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoamuonActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel20.setText("Tình trạng sách");

        cbTinhtrangSach.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cbTinhtrangSach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bình thường", "Hư Sách", "Mất Sách" }));
        cbTinhtrangSach.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTinhtrangSachItemStateChanged(evt);
            }
        });

        jLabel21.setText("Tiền Phạt : Làm hư sách (rách, hứ gáy, xé trang, ... ) , phạt 40.000 đ");

        jLabel22.setText("Làm mất sách, phạt 100.000 đ");

        jLabel23.setText("Trả sách muộn phạt 20.000 đ / tuần");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel24.setText("Xác nhận mượn");

        cbXacnhanmuon.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cbXacnhanmuon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trạng thái", "Chờ duyệt", "Đang mượn", "Trả muộn", "Đền bù", "Đã trả" }));

        btnXacnhan.setBackground(new java.awt.Color(255, 255, 204));
        btnXacnhan.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnXacnhan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/check.png"))); // NOI18N
        btnXacnhan.setText("  XÁC NHẬN ĐÃ TRẢ");
        btnXacnhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacnhanActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel25.setText("Tiền Phạt");

        tfTienphat.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tfTienphat.setEnabled(false);

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel26.setText("Ngày trả dự kiến");

        dcNgaytradukien.setDateFormatString("dd-MM-yyyy");
        dcNgaytradukien.setEnabled(false);
        dcNgaytradukien.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tfTienphatmuon.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tfTienphatmuon.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbMaCTphieumuon, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfTenSachCTpm)
                                            .addComponent(cbMaSach_CTPM, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(cbTinhtrangSach, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE))
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(dcNgaymuon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel26)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(dcNgaytradukien, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(dcNgaytrathucte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(46, 46, 46))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbXacnhanmuon, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tfTienphatmuon))
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tfTienphat, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(62, 62, 62)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(btnXacnhan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnLammoiCTpm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCapnhat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnXoamuon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnMuonthem, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))))
                        .addGap(25, 25, 25))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(lbMaCTphieumuon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbMaSach_CTPM, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfTenSachCTpm, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dcNgaymuon, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dcNgaytradukien, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcNgaytrathucte, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbTinhtrangSach, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfTienphat, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel23)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnXacnhan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbXacnhanmuon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTienphatmuon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnMuonthem, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(btnXoamuon, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCapnhat, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLammoiCTpm, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );

        jTabbedPane2.addTab("Chi tiết Phiếu mượn", jPanel4);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1265, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1265, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 607, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 604, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("PHIẾU MƯỢN", new javax.swing.ImageIcon(getClass().getResource("/Imgs/QuanlyPM.png")), jPanel2); // NOI18N

        jPanel6.setBackground(new java.awt.Color(132, 206, 235));

        jScrollPane4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tblDocgia.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tblDocgia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Độc giả", "Tên độc giả", "Ngày sinh", "Giới tính", "Mail", "Số điện thoại", "Mã Tài khoản"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblDocgia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDocgiaMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblDocgia);
        if (tblDocgia.getColumnModel().getColumnCount() > 0) {
            tblDocgia.getColumnModel().getColumn(0).setPreferredWidth(70);
            tblDocgia.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblDocgia.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblDocgia.getColumnModel().getColumn(3).setPreferredWidth(70);
            tblDocgia.getColumnModel().getColumn(4).setPreferredWidth(200);
            tblDocgia.getColumnModel().getColumn(5).setPreferredWidth(125);
            tblDocgia.getColumnModel().getColumn(6).setPreferredWidth(70);
        }

        jPanel8.setBackground(new java.awt.Color(132, 206, 235));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/user.png"))); // NOI18N
        jLabel6.setText("  THÔNG TIN ĐỘC GIẢ");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel13.setText("Mã độc giả");

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel27.setText("Tên Độc giả");

        tfMaDocgia.setBackground(new java.awt.Color(255, 255, 204));
        tfMaDocgia.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tftenDocgia.setBackground(new java.awt.Color(255, 255, 204));
        tftenDocgia.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel28.setText("Ngày sinh");

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel29.setText("Giới tính");

        rdoNam.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rdoNam.setText("Nam");

        RdoNu.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        RdoNu.setText("Nữ");

        tfDG_Mail.setBackground(new java.awt.Color(255, 255, 204));
        tfDG_Mail.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tfDG_SDT.setBackground(new java.awt.Color(255, 255, 204));
        tfDG_SDT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel30.setText("Mail");

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel31.setText("Số điện thoại");

        dcNgaysinh.setBackground(new java.awt.Color(255, 255, 204));
        dcNgaysinh.setDateFormatString("dd-MM-yyyy");
        dcNgaysinh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(RdoNu, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfDG_SDT, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(89, 89, 89)
                            .addComponent(rdoNam, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfMaDocgia))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tftenDocgia, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfDG_Mail)))
                    .addContainerGap(18, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(82, 82, 82)
                .addComponent(dcNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RdoNu)
                .addGap(0, 81, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfMaDocgia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tftenDocgia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rdoNam))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfDG_Mail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfDG_SDT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel9.setBackground(new java.awt.Color(132, 206, 237));

        jLabel32.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/account.png"))); // NOI18N
        jLabel32.setText("THÔNG TIN TÀI KHOẢN");

        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel33.setText("Mã tài khoản");

        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel34.setText("Tài khoản");

        tfMaTK.setBackground(new java.awt.Color(255, 255, 204));
        tfMaTK.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tfTaikhoan.setBackground(new java.awt.Color(255, 255, 204));
        tfTaikhoan.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tfMatkhau.setBackground(new java.awt.Color(255, 255, 204));
        tfMatkhau.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel35.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel35.setText("Mật khẩu");

        rdoCam.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rdoCam.setText("Cấm");

        jLabel36.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel36.setText("cuốn đang mượn");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(rdoCam, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addComponent(tfLuotmuon, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfMatkhau, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfTaikhoan, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfMaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(27, Short.MAX_VALUE)))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel32)
                .addGap(119, 119, 119)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdoCam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfLuotmuon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfMaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfTaikhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfMatkhau, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(42, Short.MAX_VALUE)))
        );

        btnCam.setBackground(new java.awt.Color(255, 255, 204));
        btnCam.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnCam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/ban.png"))); // NOI18N
        btnCam.setText("CẤM");
        btnCam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCamActionPerformed(evt);
            }
        });

        btnSuaDG.setBackground(new java.awt.Color(255, 255, 204));
        btnSuaDG.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnSuaDG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/capnhatDG.png"))); // NOI18N
        btnSuaDG.setText("  SỬA");
        btnSuaDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaDGActionPerformed(evt);
            }
        });

        btnThemDocgia.setBackground(new java.awt.Color(255, 255, 204));
        btnThemDocgia.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnThemDocgia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/themDG.png"))); // NOI18N
        btnThemDocgia.setText(" THÊM");
        btnThemDocgia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemDocgiaActionPerformed(evt);
            }
        });

        btnLammoiDG.setBackground(new java.awt.Color(255, 255, 204));
        btnLammoiDG.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnLammoiDG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/refresh.png"))); // NOI18N
        btnLammoiDG.setText("LÀM MỚI");
        btnLammoiDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLammoiDGActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(btnThemDocgia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSuaDG)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCam, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLammoiDG, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThemDocgia, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSuaDG, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCam, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLammoiDG, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("QUẢN LÝ ĐỘC GIẢ", new javax.swing.ImageIcon(getClass().getResource("/Imgs/quanlyDG.png")), jPanel6); // NOI18N

        jPanel5.setBackground(new java.awt.Color(132, 206, 237));
        jPanel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        cbTKDG.setBackground(new java.awt.Color(255, 255, 204));
        cbTKDG.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cbTKDG.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Độc giả trả sách muộn", "Độc giả đang mượn", "Độc giả chưa trả tiền phạt", "Xếp hạng mượn của độc giả", "Sách được mượn nhiều trong ngày" }));
        cbTKDG.setToolTipText("");
        cbTKDG.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTKDGItemStateChanged(evt);
            }
        });

        tblTK.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tblTK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(tblTK);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1095, Short.MAX_VALUE)
                    .addComponent(cbTKDG, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(cbTKDG, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(" THỐNG KÊ", new javax.swing.ImageIcon(getClass().getResource("/Imgs/Thongke.png")), jPanel5); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTabbedPane1)
                    .addComponent(ooo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ooo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Tra Cứu                ");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Chức năng giao diện quản lý thư viện
    //
    public void resetmodeSach() {
        tfmaSach.setText("");
        tftenSach.setText("");
        tfNhaxuatban.setText("");
        tfNamsuatban.setText("");
        tfSoluong.setText("");
        tpMota.setText("");
        tfTacgia.setText("");
        cbDanhmuc.setSelectedIndex(0);
        cbTheloai.setSelectedIndex(0);

    }
    private void btnDangsuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangsuatActionPerformed
        // TODO add your handling code here:
        this.dispose();
        GUI_DangNhap TheDangNhap = new GUI_DangNhap();
        TheDangNhap.setVisible(true);
    }//GEN-LAST:event_btnDangsuatActionPerformed

    private void btnLammoiDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLammoiDGActionPerformed
        // TODO add your handling code here:
        filldataTableDocgia();
        tfMaDocgia.setText("DG" + String.valueOf(CtrDG.CtrCountDG()));
        tfMaTK.setText("TK" + String.valueOf(CtrDN.CtrCountTK()));
    }//GEN-LAST:event_btnLammoiDGActionPerformed

    private void btnThemDocgiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemDocgiaActionPerformed
        // TODO add your handling code here:
        if (open == 0) {
            lockDG(true);
            lockbtnDG(true);
            filldataTableDocgia();
            open++;
            intDG = 1;
        } else {
            try {
                if (ValidateForm_RI()) {
                    DocGia DG = getModeldocgia();
                    Taikhoan Acc = getmodelTaikhoan();

                    boolean b = CtrDN.CtrThemTaikhoan(Acc);
                    boolean a = CtrDG.CtrThemDocGia(DG);

                    if (a && b) {
                        JOptionPane.showMessageDialog(this, "Thêm thành công", "", JOptionPane.PLAIN_MESSAGE);
                        intDG = 0;
                        lockDG(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Thêm thất bại", "", JOptionPane.PLAIN_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Thiếu thông tin ", "", JOptionPane.PLAIN_MESSAGE);
                }
            } catch (HeadlessException e2) {
                // TODO: handle exception
            }
            filldataTableDocgia();
            open = 0;
        }
    }//GEN-LAST:event_btnThemDocgiaActionPerformed

    private void btnSuaDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaDGActionPerformed
        // TODO add your handling code here:
        try {
            if (ValidateForm_RI()) {
                DocGia DG = getModeldocgia();
                Taikhoan Acc = getmodelTaikhoan();
                boolean b = CtrDN.CtrSuaTaikhoan(Acc);
                boolean a = CtrDG.CtrSuaDocGia(DG);

                if (a && b) {
                    JOptionPane.showMessageDialog(this, "Sửa thành công", "", JOptionPane.PLAIN_MESSAGE);
                    lockDG(false);
                    filldataTableDocgia();
                    intDG = 0;
                } else {
                    JOptionPane.showMessageDialog(this, "Sửa Không thành công", "", JOptionPane.PLAIN_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Thiếu thông tin", "", JOptionPane.PLAIN_MESSAGE);
            }
        } catch (HeadlessException e2) {
            // TODO: handle exception

        }
    }//GEN-LAST:event_btnSuaDGActionPerformed

    private void btnCamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCamActionPerformed
        // TODO add your handling code here:
        if (rdoCam.isSelected()) {
            rdoCam.setText("Mở khóa tài khoản");
            lockbtnDG(false);
            CtrDN.CtrCamormokhoa(tfMaTK.getText(), 0);
        } else {
            rdoCam.setText("Khóa tài khoản");
            lockbtnDG(false);
            CtrDN.CtrCamormokhoa(tfMaTK.getText(), 1);
        }

        filldataTableDocgia();
    }//GEN-LAST:event_btnCamActionPerformed

    private void tblDocgiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDocgiaMouseClicked
        // TODO add your handling code here:
        if (intDG == 1) {
            int row = tblDocgia.getSelectedRow();
            DocGia DG = CtrDG.CtrgetDGbymaDG(tblDocgia.getValueAt(row, 0).toString());
            Taikhoan tk = CtrDN.CtrgetTaikhoanID(tblDocgia.getValueAt(row, 6).toString());
            setmodelGD_TK(DG, tk);
        }
    }//GEN-LAST:event_tblDocgiaMouseClicked

    private void btnXacnhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacnhanActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Model = (DefaultTableModel) TableCTphieumuon.getModel();
        int row = TableCTphieumuon.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, " Hãy chọn  một thông tin phiếu mượn", "", JOptionPane.PLAIN_MESSAGE);
        } else {
            String maSach = TableCTphieumuon.getValueAt(row, 0).toString();

            ChitietPhieuMuon ctpm = getModelCTPM();
            if (ctpm != null) {

                if (cbXacnhanmuon.getSelectedIndex() == 3 || cbXacnhanmuon.getSelectedIndex() == 4) {

                    ctpm.setXetduyet("Đã trả");
                    if (CtrCTPM.CtrSuaCTPhieumuon(ctpm)) {
                        JOptionPane.showMessageDialog(this, "Xác nhận trả thành công", "", JOptionPane.PLAIN_MESSAGE);
                        filldatatableCTDSmuon();

                        // Cập nhật lại phiếu mượn
                        checkdangmuon(Model);
                        filldataTableDSPhieumuon();

                        // Cập nhật lại số lượng mượn của độc giả
                        String maDocgia = CtrPM.CtrgetPMbymaPM(maPMdcchon).getMaDocgia();
                        Taikhoan tk = CtrDN.CtrgetTaikhoanID(CtrDG.CtrgetDGbymaDG(maDocgia).getMaTaikhoan());

                        boolean CtrSuasoluongmuon = CtrCTPM.CtrSuasoluongmuon(tk.getMaTaikhoan(), tk.getSoluongmuon() - 1);
                        if (cbXacnhanmuon.getSelectedIndex() == 4) {
                            String maDocgiaString = CtrPM.CtrgetPMbymaPM(maPMdcchon).getMaDocgia();
                            Taikhoan tkTaikhoan = CtrDN.CtrgetTaikhoanID(CtrDG.CtrgetDGbymaDG(maDocgiaString).getMaTaikhoan());
                            CtrDN.CtrCamormokhoa(tkTaikhoan.getMaTaikhoan(), 0);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Xác nhận không thành công, vui lòng thử lại", "", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    ctpm.setXetduyet("Đã trả");
                    if (CtrCTPM.CtrSuaCTPhieumuon(ctpm)) {
                        JOptionPane.showMessageDialog(this, "Xác nhận trả thành công", "", JOptionPane.PLAIN_MESSAGE);

                        filldatatableCTDSmuon();

                        // Cập nhật lại phiếu mượn
                        checkdangmuon(Model);
                        filldataTableDSPhieumuon();

                        // Cập nhật lại số lượng sách
                        boolean CtrCapnhatsoluongsach = CtrSach.CtrCapnhatsoluongsach(CtrSach.CtrgetIDSach(ctpm.getMaSach()), +1);
                        filldataTableSach();

                        // Cập nhật lại số lượng mượn của độc giả
                        String maDocgia = CtrPM.CtrgetPMbymaPM(maPMdcchon).getMaDocgia();
                        Taikhoan tk = CtrDN.CtrgetTaikhoanID(CtrDG.CtrgetDGbymaDG(maDocgia).getMaTaikhoan());
                        boolean CtrSuasoluongmuon = CtrCTPM.CtrSuasoluongmuon(tk.getMaTaikhoan(), tk.getSoluongmuon() - 1);
                    }
                }

            } else {
                JOptionPane.showMessageDialog(this, "Xóa không thành công, vui lòng thử lại", "", JOptionPane.ERROR_MESSAGE);
            }

        }
        resetmodePM();
    }//GEN-LAST:event_btnXacnhanActionPerformed

    private void cbTinhtrangSachItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTinhtrangSachItemStateChanged
        // TODO add your handling code here:
        tfTienphat.setText("0");

        if (cbTinhtrangSach.getSelectedIndex() == 2) {
            if (dcNgaytradukien.getDate() != null) {
                dcNgaytrathucte.setDate(dcNgaytradukien.getDate());
                dcNgaytrathucte.setEnabled(false);

                cbXacnhanmuon.setSelectedIndex(4);
                cbXacnhanmuon.setEnabled(false);
            }
        } else {
            if (cbTinhtrangSach.getSelectedIndex() == 0) {
                dcNgaytrathucte.setDate(null);
                dcNgaytrathucte.setEnabled(true);

                cbXacnhanmuon.setSelectedIndex(2);
                cbXacnhanmuon.setEnabled(true);
            }
        }
        setTienphat();
    }//GEN-LAST:event_cbTinhtrangSachItemStateChanged

    private void btnXoamuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoamuonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Model = (DefaultTableModel) TableCTphieumuon.getModel();
        int row = TableCTphieumuon.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, " Hãy chọn  một thông tin phiếu mượn", "", JOptionPane.PLAIN_MESSAGE);
        } else {
            String maSach = TableCTphieumuon.getValueAt(row, 0).toString();

            if (CtrCTPM.CtrgetCTPMbymaSach_maPM(maSach, maPMdcchon).getXetduyet().equals("Đang mượn")) {
                JOptionPane.showMessageDialog(this, "Xóa không thành công", "Không thể xóa sách đã mượn", JOptionPane.ERROR_MESSAGE);
                filldataTableSach();
            } else {
                Boolean a = CtrCTPM.CtrXoaCTPMbymaSach_maPM(maSach, maPMdcchon);
                if (a) {
                    // Truy cập vô độc giả + thêm lượt mượn
                    String maDocgia = CtrPM.CtrgetPMbymaPM(maPMdcchon).getMaDocgia();
                    Taikhoan tk = CtrDN.CtrgetTaikhoanID(CtrDG.CtrgetDGbymaDG(maDocgia).getMaTaikhoan());

                    CtrCTPM.CtrSuasoluongmuon(tk.getMaTaikhoan(), tk.getSoluongmuon() + 1);

                    // Hàm mặc định
                    filldatatableCTDSmuon();
                    JOptionPane.showMessageDialog(this, "Xóa thông tin trong phiếu mượn thành công", "", JOptionPane.PLAIN_MESSAGE);
                    checkdangmuon(Model);
                    filldataTableDSPhieumuon();
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa không thành công, vui lòng thử lại", "", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        resetmodePM();
        khoamuonthem();
    }//GEN-LAST:event_btnXoamuonActionPerformed

    private void btnLammoiCTpmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLammoiCTpmActionPerformed
        // TODO add your handling code here:
        filldatatableCTDSmuon();
        lockCTPM(true);
        lockCTPM(false);
        cbXacnhanmuon.setSelectedIndex(0);
        cbXacnhanmuon.setEnabled(true);
        btnXacnhan.setEnabled(true);
        resetmodePM();
        khoamuonthem();

    }//GEN-LAST:event_btnLammoiCTpmActionPerformed

    private void dcNgaymuonPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dcNgaymuonPropertyChange
        // TODO add your handling code here:
        if (check) {
            if (dcNgaymuon.getDate() != null) {
                java.util.Date dateU = Tinhngaytradukien(dcNgaymuon.getDate(), CtrPM.CtrgetPMbymaPM(maPMdcchon).getSongaymuon());
                dcNgaytradukien.setDate(dateU);
            }
        }
    }//GEN-LAST:event_dcNgaymuonPropertyChange

    private void tfTenSachCTpmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTenSachCTpmKeyPressed
        // TODO add your handling code here:

        String tenSach = tfTenSachCTpm.getText();
        if (tenSach.length() > 2) {
            Sach BK = CtrSach.ctrgetSachtheoten(tenSach);
            if (BK != null) {
                cbMaSach_CTPM.setSelectedItem(BK.getMaSach());
            } else {
                cbMaSach_CTPM.getItemAt(0);
            }

        }
    }//GEN-LAST:event_tfTenSachCTpmKeyPressed

    private void cbMaSach_CTPMItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMaSach_CTPMItemStateChanged
        // TODO add your handling code here:
        if (check) {

            String maSach = cbMaSach_CTPM.getSelectedItem().toString();
            Sach BK = CtrSach.CtrgetIDSach(maSach);
            if (BK != null) {
                tfTenSachCTpm.setText(BK.getTenSach());
            } else {
                tfTenSachCTpm.setText("");
            }
        }
    }//GEN-LAST:event_cbMaSach_CTPMItemStateChanged

    private void btnMuonthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMuonthemActionPerformed
        // TODO add your handling code here
        DefaultTableModel Model = (DefaultTableModel) TableCTphieumuon.getModel();
        int row = TableCTphieumuon.getRowCount();
        if (row < 3) {
            if (ValidateForm_CTPM()) {
                JOptionPane.showMessageDialog(this, "Hãy nhập dữ liệu sách", "", JOptionPane.PLAIN_MESSAGE);
            } else {
                ChitietPhieuMuon ctpm = getModelCTPM();
                if (ctpm != null) {
                    if (KiemtraSLmuon(ctpm.getMaSach())) {
                        JOptionPane.showMessageDialog(this, "Bạn đã có sách này trong danh mục mượn", "", JOptionPane.PLAIN_MESSAGE);
                    } else {
                        Boolean a = CtrCTPM.CtrThemCTPhieumuon_Thuthu(ctpm);

                        if (a) {
                            filldatatableCTDSmuon();

                            JOptionPane.showMessageDialog(this, "Thêm mới thành công", "", JOptionPane.PLAIN_MESSAGE);
                            khoamuonthem();

                            //Truy cập vô mã độc giả mà - đi lượt mượn
                            String maDocgia = CtrPM.CtrgetPMbymaPM(maPMdcchon).getMaDocgia();
                            Taikhoan tk = CtrDN.CtrgetTaikhoanID(CtrDG.CtrgetDGbymaDG(maDocgia).getMaTaikhoan());
                            CtrCTPM.CtrSuasoluongmuon(tk.getMaTaikhoan(), tk.getSoluongmuon() - 1);

                            //Truy cập vô Sách để trừ đi so luong sach (nếu getModelCTPM.getXetmuon = đã mượn
                            if (ctpm.getXetduyet().equals("Đang mượn")) {
                                boolean CtrCapnhatsoluongsach = CtrSach.CtrCapnhatsoluongsach(CtrSach.CtrgetIDSach(ctpm.getMaSach()), -1);
                            }

                            checkdangmuon(Model);
                            filldataTableDSPhieumuon();
                        } else {
                            JOptionPane.showMessageDialog(this, "Thêm mới không thành công, vui lòng thử lại", "", JOptionPane.ERROR_MESSAGE);
                        }
                        khoamuonthem();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Thiếu thông tin thực hiện lệnh", "", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            khoamuonthem();
        }
        resetmodePM();
    }//GEN-LAST:event_btnMuonthemActionPerformed

    private void btnCapnhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapnhatActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Model = (DefaultTableModel) TableCTphieumuon.getModel();
        int row = TableCTphieumuon.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, " Hãy chọn  một thông tin phiếu mượn", "", JOptionPane.PLAIN_MESSAGE);
        } else {
            ChitietPhieuMuon ctpm = getModelCTPM();
            if (cbTinhtrangSach.getSelectedIndex() == 2) {
                ctpm.setXetduyet("Đền bù");
                boolean a = CtrCTPM.CtrSuaCTPhieumuon(ctpm);

                if (a) {
                    filldatatableCTDSmuon();
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công", "", JOptionPane.PLAIN_MESSAGE);

                    //Khóa độc giả chưa trả tiền phạt
                    String maDocgia = CtrPM.CtrgetPMbymaPM(maPMdcchon).getMaDocgia();
                    Taikhoan tk = CtrDN.CtrgetTaikhoanID(CtrDG.CtrgetDGbymaDG(maDocgia).getMaTaikhoan());
                    CtrDN.CtrCamormokhoa(tk.getMaTaikhoan(), 1);
                    filldataTableDocgia();

                    checkdangmuon(Model);
                    filldataTableDSPhieumuon();
                } else {
                    JOptionPane.showMessageDialog(this, "Cập nhật không thành công", "", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                if (dcNgaymuon.getDate() != null) {
                    String maSach = TableCTphieumuon.getValueAt(row, 0).toString();
                    String Xacnhan = TableCTphieumuon.getValueAt(row, 7).toString();

                    if (ctpm != null) {
                        if (Xacnhan.equals(cbXacnhanmuon.getSelectedItem().toString())) {
                            boolean a = CtrCTPM.CtrSuaCTPhieumuon(ctpm);
                            if (a) {
                                filldatatableCTDSmuon();
                                JOptionPane.showMessageDialog(this, "Cập nhật thành công", "", JOptionPane.PLAIN_MESSAGE);
                            } else {

                                JOptionPane.showMessageDialog(this, "Cập nhật không thành công", "", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            if (Xacnhan.equalsIgnoreCase("Chờ duyệt")) {
                                boolean a = CtrCTPM.CtrSuaCTPhieumuon(ctpm);
                                if (a) {
                                    filldatatableCTDSmuon();
                                    JOptionPane.showMessageDialog(this, "Cập nhật thành công", "", JOptionPane.PLAIN_MESSAGE);

                                    boolean CtrCapnhatsoluongsach = CtrSach.CtrCapnhatsoluongsach(CtrSach.CtrgetIDSach(ctpm.getMaSach()), -1);
                                    filldataTableSach();

                                    checkdangmuon(Model);
                                    filldataTableDSPhieumuon();
                                } else {

                                    JOptionPane.showMessageDialog(this, "Cập nhật không thành công", "", JOptionPane.ERROR_MESSAGE);
                                }

                            } else {
                                if (Xacnhan.equalsIgnoreCase("Đang mượn")) {
                                    if (cbXacnhanmuon.getSelectedItem().toString().equals("Chờ duyệt")) {
                                        boolean a = CtrCTPM.CtrSuaCTPhieumuon(ctpm);
                                        if (a) {
                                            filldatatableCTDSmuon();
                                            JOptionPane.showMessageDialog(this, "Cập nhật thành công", "", JOptionPane.PLAIN_MESSAGE);

                                            // Cập nhật lại số lượng sách
                                            boolean CtrCapnhatsoluongsach = CtrSach.CtrCapnhatsoluongsach(CtrSach.CtrgetIDSach(ctpm.getMaSach()), +1);

                                            filldataTableSach();
        
                                        } else {
                                            JOptionPane.showMessageDialog(this, "Cập nhật không thành công", "", JOptionPane.ERROR_MESSAGE);
                                        }
                                    } else {
                                        if (cbXacnhanmuon.getSelectedItem().toString().equals("Trả muộn")) {
                                            boolean a = CtrCTPM.CtrSuaCTPhieumuon(ctpm);
                                            if (a) {
                                                filldatatableCTDSmuon();
                                                JOptionPane.showMessageDialog(this, "Cập nhật thành công", "", JOptionPane.PLAIN_MESSAGE);

                                                // Cập nhật lại số lượng sách
                                                boolean CtrCapnhatsoluongsach = CtrSach.CtrCapnhatsoluongsach(CtrSach.CtrgetIDSach(ctpm.getMaSach()), +1);

                                                filldataTableSach();

                                                checkdangmuon(Model);
                                                filldataTableDSPhieumuon();
                                            } else {
                                                JOptionPane.showMessageDialog(this, "Cập nhật không thành công", "", JOptionPane.ERROR_MESSAGE);
                                            }
                                        }

                                    }

                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Thiếu thông tin thực hiện lệnh", "", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, " Chưa nhập thông tin ngày mượn ", "", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        lockCTPM(true);
        resetmodePM();
    }//GEN-LAST:event_btnCapnhatActionPerformed

    private void dcNgaytrathuctePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dcNgaytrathuctePropertyChange
        // TODO add your handling code here:
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        if (check) {
            int row = TableCTphieumuon.getSelectedRow();
            if (dcNgaytrathucte.getDate() != null) {
                if (dcNgaytradukien.getDate() != null) {
                    try {

                        if (dcNgaytrathucte.getDate().before(dcNgaytradukien.getDate())) {

                            cbXacnhanmuon.setSelectedIndex(2);
                            cbXacnhanmuon.setEnabled(true);
                            btnXacnhan.setEnabled(true);
                            btnCapnhat.setEnabled(false);
                        } else {
                            if (formatter.parse(formatter.format(dcNgaytrathucte.getDate())).equals(dcNgaytradukien.getDate())) {
                                if (cbTinhtrangSach.getSelectedIndex() == 2) {
                                    cbXacnhanmuon.setEnabled(true);
                                    btnXacnhan.setEnabled(false);
                                } else {
                                    cbXacnhanmuon.setSelectedIndex(2);
                                    cbXacnhanmuon.setEnabled(true);
                                    btnXacnhan.setEnabled(true);
                                    btnCapnhat.setEnabled(false);
                                }
                            } else {

                                cbXacnhanmuon.setSelectedIndex(3);
                                cbXacnhanmuon.setEnabled(false);
                                btnXacnhan.setEnabled(false);
                                btnCapnhat.setEnabled(true);
                            }
                        }
                    } catch (ParseException e) {

                    }
                } else {
                    dcNgaymuon.setDate(null);
                    cbXacnhanmuon.setEnabled(true);
                }
                Tinhtienphatmuon();
            } else {
                tfTienphatmuon.setText("0");
            }
        }
    }//GEN-LAST:event_dcNgaytrathuctePropertyChange

    private void TableCTphieumuonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableCTphieumuonMouseClicked
        // TODO add your handling code here:

        int row = TableCTphieumuon.rowAtPoint(evt.getPoint());
        ChitietPhieuMuon ctpm = CtrCTPM.CtrgetCTPMbymaSach_maPM(TableCTphieumuon.getValueAt(row, 0).toString(), maPMdcchon);
        setModelCPM(ctpm);
        ctpm.getXetduyet();

        lockbtnCTPM(true);
        lockCTPM(true);
        dcNgaytrathucte.setEnabled(true);
        cbTinhtrangSach.setEnabled(true);
        cbXacnhanmuon.setEnabled(true);
        btnXacnhan.setEnabled(false);

        switch (cbXacnhanmuon.getSelectedIndex()) {
            case 1 -> {
                if (ctpm.getNgaytradukien() != null || !"Chờ duyệt".equals(ctpm.getXetduyet())) {
                    dcNgaytrathucte.setEnabled(true);
                    btnXacnhan.setEnabled(false);
                }
            }

            case 2 -> {
                if (cbXacnhanmuon.getSelectedIndex() == 2) {
                    lockCTPM(false);
                }
            }

            case 3, 4 -> {
                if (cbXacnhanmuon.getSelectedIndex() == 3 || cbXacnhanmuon.getSelectedIndex() == 4) {
                    btnCapnhat.setEnabled(false);
                    lockCTPM(false);
                    lockbtnCTPM(false);
                    dcNgaytrathucte.setEnabled(false);
                    cbTinhtrangSach.setEnabled(false);
                    cbXacnhanmuon.setEnabled(false);
                    btnXacnhan.setEnabled(true);

                }
            }
            case 5 -> {
                if (cbXacnhanmuon.getSelectedIndex() == 5) {
                    btnCapnhat.setEnabled(false);
                    lockCTPM(false);
                    lockbtnCTPM(false);
                    dcNgaytrathucte.setEnabled(false);
                    cbTinhtrangSach.setEnabled(false);
                    cbXacnhanmuon.setEnabled(false);
                    btnXacnhan.setEnabled(false);
                }
            }

            default ->
                throw new AssertionError();
        }

    }//GEN-LAST:event_TableCTphieumuonMouseClicked

    private void cbMaDocgia_PMItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMaDocgia_PMItemStateChanged
        // TODO add your handling code here:
        if (check) {
            String maDG = cbMaDocgia_PM.getSelectedItem().toString();
            DocGia dg = CtrDG.CtrgetDGbymaDG(maDG);

            if (dg != null) {
                tftenDocGia_PM.setText(dg.getTenDocgia());
            } else {
                tftenDocGia_PM.setText("");
            }
        }
    }//GEN-LAST:event_cbMaDocgia_PMItemStateChanged

    private void cbMaDocgia_PMItemStateChanged2(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMaDocgia_PMItemStateChanged2
        // TODO add your handling code here:
        if (check) {
            String text = tftenDocGia_PM.getText();
            if ("".equals(text)) {
                filldataTableDSPhieumuon();
            } else {
                DefaultTableModel Model = (DefaultTableModel) TableDSPhieumuon.getModel();
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(Model);
                TableDSPhieumuon.setRowSorter(sorter);
                sorter.setRowFilter(RowFilter.regexFilter(text));
            }
        }
    }//GEN-LAST:event_cbMaDocgia_PMItemStateChanged2

    private void btnGhichuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGhichuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGhichuActionPerformed

    private void btnHienthiCTpmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienthiCTpmActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Model = (DefaultTableModel) TableCTphieumuon.getModel();

        int Row = TableDSPhieumuon.getSelectedRow();
        if (Row == -1) {
            JOptionPane.showMessageDialog(this, " Hãy chọn một phiếu mượn ", "", JOptionPane.PLAIN_MESSAGE);
        } else {
            String MaPM = TableDSPhieumuon.getValueAt(Row, 0).toString();
            List<ChitietPhieuMuon> dsmuon = CtrCTPM.CtrDSChitietPhieumuon(MaPM);

            Model.setRowCount(0);
            for (ChitietPhieuMuon muon : dsmuon) {
                Model.addRow(new Object[]{muon.getMaSach(), muon.getTenSach(), getSQLDateform(muon.getNgaymuon()), getSQLDateform(muon.getNgaytradukien()), getSQLDateform(muon.getNgaytrathucte()), muon.getTienphat(), muon.getTinhtrang(), muon.getXetduyet()});
            }
            JOptionPane.showMessageDialog(this, " Xuất dữ liệu thành công. ", "Hãy kiểm tra trong phần chi tiết phiếu mượn", JOptionPane.PLAIN_MESSAGE);
            lbMaCTphieumuon.setText(MaPM);
            maPMdcchon = MaPM;
            khoamuonthem();
            resetmodePM();

            lockCTPM(true);
            lockbtnCTPM(true);
            dcNgaytrathucte.setEnabled(true);
            cbTinhtrangSach.setEnabled(true);
            cbXacnhanmuon.setEnabled(true);
            btnXacnhan.setEnabled(false);
            cbTinhtrangSach.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnHienthiCTpmActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        filldataTableSach();
        tfmaSach.setText(TaomaSachmoi());
        resetmodeSach();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            boolean a = CtrSach.CtrDeleteSach(tfmaSach.getText());
            if (a) {
                JOptionPane.showMessageDialog(this, "Xóa thông tin sách thành công", "", JOptionPane.PLAIN_MESSAGE);
                filldataTableSach();
                intSach = 0;
                btnThemSach.setText("Thêm mới");
                lockbtnSach(false);
                lockSach(false);

            } else {
                JOptionPane.showMessageDialog(this, "Xóa thông tin sách không thành công, vui lòng thử lại", "", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException e2) {
            // TODO: handle exception
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:

        try {
            if (ValidateForm()) {
                Sach Book = getModelSach();
                boolean a = CtrSach.CtrUpdateSach(Book);
                if (a) {
                    filldataTableSach();
                    JOptionPane.showMessageDialog(this, "Sửa thông tin sách thành công ", "", JOptionPane.PLAIN_MESSAGE);
                    intSach = 0;
                    btnThemSach.setText("THÊM MỚI");
                    lockbtnSach(false);
                    lockSach(false);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Sửa thông tin sách thành công ", "", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException e2) {
            // TODO: handle exception
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnThemSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSachActionPerformed
        // TODO add your handling code here:
        if (intSach == 0) {
            intSach++;
            btnThemSach.setText("THÊM SÁCH");
            lockSach(true);
            lockbtnSach(true);
        } else {
            try {
                if (ValidateForm()) {
                    Sach BK = getModelSach();
                    boolean a = CtrSach.CtrInsertSach(BK);
                    if (a) {
                        filldataTableSach();
                        JOptionPane.showMessageDialog(this, "Thêm thông tin sách thành công", "", JOptionPane.PLAIN_MESSAGE);
                        intSach = 0;
                        btnThemSach.setText("THÊM MỚI");
                        lockbtnSach(false);
                        lockSach(false);

                    } else {
                        JOptionPane.showMessageDialog(this, "Thêm thông tin sách không thành công, vui lòng thử lại", "", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Thiếu thông tin về sách , vui lòng thử lại", "", JOptionPane.ERROR_MESSAGE);
                }
            } catch (HeadlessException e2) {
                // TODO: handle exception

            }

        }
    }//GEN-LAST:event_btnThemSachActionPerformed

    private void cbTheloaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTheloaiActionPerformed
        // TODO add your handling code here:
        String sql = "SELECT tenTheloai FROM Theloai WHERE maTheloai = ?";
        try {
            String a = (String) cbTheloai.getSelectedItem();
            PreparedStatement sttm = ketnoi.getConnection().prepareStatement(sql);
            sttm.setString(1, a);
            ResultSet rs = sttm.executeQuery();
            if (rs.next()) {
                tftheloai.setText(rs.getString(1));
            }
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_cbTheloaiActionPerformed

    private void cbDanhmucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDanhmucActionPerformed
        String sql = "SELECT tenDanhmuc FROM Danhmuc WHERE maDanhmuc = ?";
        try {
            String a = (String) cbDanhmuc.getSelectedItem();
            PreparedStatement sttm = ketnoi.getConnection().prepareStatement(sql);
            sttm.setString(1, a);
            ResultSet rs = sttm.executeQuery();
            if (rs.next()) {
                tfDanhmuc.setText(rs.getString(1));
            }
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_cbDanhmucActionPerformed

    private void tftenSachKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tftenSachKeyPressed
        // TODO add your handling code here:
        String text = tftenSach.getText();
        DefaultTableModel Model = (DefaultTableModel) TableSach.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(Model);
        TableSach.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(text));
    }//GEN-LAST:event_tftenSachKeyPressed

    private void TableSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableSachMouseClicked
        // TODO add your handling code here:
        if (intSach == 1) {
            int id = TableSach.rowAtPoint(evt.getPoint());
            Sach BK = CtrSach.CtrgetIDSach(TableSach.getValueAt(id, 0).toString());
            setModelSach(BK);

        }
    }//GEN-LAST:event_TableSachMouseClicked

    private void cbTKDGItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTKDGItemStateChanged
        // TODO add your handling code here:
        DefaultTableModel tkdg = (DefaultTableModel) tblTK.getModel();
        setHeaderTbl(tblTK);
        try {

            switch (cbTKDG.getSelectedIndex()) {
                case 0 -> {
                    ResultSet DGquahan = CtrTK.CtrDGmuonquahan();

                    tkdg.setColumnCount(0);
                    tkdg.addColumn("tên Độc giả");
                    tkdg.addColumn("số ngày mượn");
                    tkdg.addColumn("ngày mượn");
                    tkdg.addColumn("ngày thực trả");
                    tkdg.addColumn("số ngày quá hạn");

                    tkdg.setRowCount(0);
                    while (DGquahan.next()) {

                        tkdg.addRow(new Object[]{DGquahan.getString(1), DGquahan.getString(2), DGquahan.getInt(3), DGquahan.getString(4), DGquahan.getInt(5)});
                    }
                }

                case 1 -> {
                    ResultSet DGmuon = CtrTK.CtrDGdangmuon();

                    tkdg.setColumnCount(0);
                    tkdg.addColumn("Mã Độc giả");
                    tkdg.addColumn("tên Độc giả");

                    tkdg.setRowCount(0);
                    while (DGmuon.next()) {

                        tkdg.addRow(new Object[]{DGmuon.getString(1), DGmuon.getString(2)});
                    }
                }

                case 2 -> {
                    ResultSet DGchuatratien = CtrTK.CtrDGchuatratienphat();

                    tkdg.setColumnCount(0);
                    tkdg.addColumn("Mã Độc giả");
                    tkdg.addColumn("tên Độc giả");
                    tkdg.addColumn("Tổng tiền phạt");

                    tkdg.setRowCount(0);
                    while (DGchuatratien.next()) {

                        tkdg.addRow(new Object[]{DGchuatratien.getString(1), DGchuatratien.getString(2), DGchuatratien.getFloat(3)});
                    }
                }

                case 3 -> {
                    ResultSet DGnhieu = CtrTK.CtrDGmuonnhieunhat();

                    tkdg.setColumnCount(0);
                    tkdg.addColumn("Tên Dộc giả");
                    tkdg.addColumn("Số lần mượn sách");

                    tkdg.setRowCount(0);
                    while (DGnhieu.next()) {

                        tkdg.addRow(new Object[]{DGnhieu.getString(1), DGnhieu.getInt(2)});
                    }
                }

                case 4 -> {
                    ResultSet XHSachNgay = CtrTK.CtrXephangsachngay();

                    tkdg.setColumnCount(0);
                    tkdg.addColumn("Mã Sách");
                    tkdg.addColumn("Tên Sách");
                    tkdg.addColumn("Sô lần mượn trong ngày");
                    tkdg.addColumn("Ngaymuon");

                    tkdg.setRowCount(0);
                    while (XHSachNgay.next()) {

                        tkdg.addRow(new Object[]{XHSachNgay.getString(1), XHSachNgay.getInt(2), XHSachNgay.getString(3), XHSachNgay.getDate(4)});
                    }
                }

                default ->
                    throw new AssertionError();
            }
            //Chưa trả tiền phạt
        } catch (Exception e) {
        }

    }//GEN-LAST:event_cbTKDGItemStateChanged

    private void btnThemphieumuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemphieumuonActionPerformed
        String maPM = "PM" + String.valueOf(CtrPM.CtrDemSoPM());

        Phieumuon phieuMuon = new Phieumuon();
        phieuMuon.setMaPhieumuon(maPM);

        phieuMuon.setMaThuthu(null);
        phieuMuon.setSongaymuon(Integer.parseInt(String.valueOf(cbSongaymuon.getSelectedItem())));
        phieuMuon.setGhichu(null);
        phieuMuon.setTrangthai("Chưa duyệt");
        if (cbMaDocgia_PM.getSelectedIndex() != 0) {
            JOptionPane.showMessageDialog(this, "Thiếu thông tin mã tài khoản , vui lòng thử lại", "", JOptionPane.ERROR_MESSAGE);
        } else {
            phieuMuon.setMaDocgia(cbMaDocgia_PM.getSelectedItem().toString());
            CtrPM.CtrThemPhieumuon(phieuMuon);
        }
        filldataTableDSPhieumuon();
        
        
    }//GEN-LAST:event_btnThemphieumuonActionPerformed

    public void lockbtnCTPM(boolean bool) {
        btnCapnhat.setEnabled(bool);
        btnXoamuon.setEnabled(bool);
    }

    public void Tinhtienphatmuon() {
        String Xacnhanmuon = cbXacnhanmuon.getSelectedItem().toString();
        if (Xacnhanmuon.equalsIgnoreCase("Trả muộn")) {
            long diff = dcNgaytrathucte.getDate().getTime() - dcNgaytradukien.getDate().getTime();
            TimeUnit time = TimeUnit.DAYS;
            float diffrence = time.convert(diff, TimeUnit.MILLISECONDS);
            long tien = (long) (diffrence / 7 * 20000);
            tfTienphatmuon.setText(String.valueOf(tien));
        } else {
            tfTienphatmuon.setText("0");
        }

    }

    public void lockSach(boolean bool) {
        tftenSach.setEnabled(check);
        tfTacgia.setEnabled(bool);
        tfNamsuatban.setEnabled(bool);
        tfNhaxuatban.setEditable(bool);
        tfSoluong.setEnabled(bool);
        tpMota.setEnabled(bool);
        cbDanhmuc.setEnabled(bool);
        cbTheloai.setEnabled(bool);
    }

    public void lockbtnSach(boolean bool) {
        btnEdit.setEnabled(bool);
        btnDelete.setEnabled(bool);
    }

    public java.util.Date getTimenow() {
        return new Date();
    }

    public void resetmodePM() {
        cbMaSach_CTPM.setSelectedIndex(0);

        dcNgaymuon.setDate(null);
        dcNgaytradukien.setDate(null);
        dcNgaytrathucte.setDate(null);
        cbTinhtrangSach.setSelectedItem(0);

        cbXacnhanmuon.setSelectedIndex(0);
    }

    public void checkdangmuon(DefaultTableModel tbl) {
        int row = tbl.getRowCount();
        Phieumuon PM = CtrPM.CtrgetPMbymaPM(maPMdcchon);
        PM.setMaThuthu(maThuThu);

        if (KiemtraSachdangmuon("Chờ duyệt") > 0) {
            PM.setTrangthai("Chưa duyệt");
        } else {
            if (KiemtraSachdangmuon("Đang mượn") == row) {
                PM.setTrangthai("Đang mượn");
            } else {
                if (KiemtraSachdangmuon("Đã trả") == row) {
                    PM.setTrangthai("Đã Trả");
                } else {
                    PM.setTrangthai("Đang cập nhật");
                }

            }
        }
        CtrPM.CtrSuaPhieumuon(PM);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_ThuThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        //</editor-fold>

        /* Create and display the form */
    }

    public Boolean ValidateForm() {
        return !(tfmaSach.getText().isEmpty()
                || tfmaSach.getText().isEmpty()
                || tfTacgia.getText().isEmpty()
                || tfNhaxuatban.getText().isEmpty()
                || tfNamsuatban.getText().isEmpty()
                || cbDanhmuc.getSelectedItem().toString().equals(cbDanhmuc.getItemAt(0))
                || cbTheloai.getSelectedItem().toString().equals(cbTheloai.getItemAt(0))
                || tfNamsuatban.getText().isEmpty()
                || tfSoluong.getText().isEmpty());
    }

    public void ShowMesage(String message) {
        JOptionPane.showConfirmDialog(this, message);
    }

    public String TaomaSachmoi() {
        return "B" + String.valueOf(CtrSach.CtrgetSLSach());
    }

    public Sach getModelSach() {
        Sach BK = new Sach();
        BK.setMaSach(tfmaSach.getText());
        BK.setTenSach(tftenSach.getText());
        BK.setMaDanhMuc(cbDanhmuc.getSelectedItem().toString());
        BK.setMaTheLoai(cbTheloai.getSelectedItem().toString());
        BK.setTacgia(tfTacgia.getText());
        BK.setNhaXuatBan(tfNhaxuatban.getText());
        BK.setNamXuatBan(Integer.parseInt(tfNamsuatban.getText()));
        BK.setSoluong(Integer.parseInt(tfSoluong.getText()));
        BK.setMota(tpMota.getText());
        return BK;
    }

    public void setModelSach(Sach BK) {
        tfmaSach.setText(BK.getMaSach());
        tftenSach.setText(BK.getTenSach());
        cbDanhmuc.setSelectedItem(BK.getMaDanhMuc());
        cbTheloai.setSelectedItem(BK.getMaTheLoai());
        tfTacgia.setText(BK.getTacgia());
        tfNhaxuatban.setText(BK.getNhaXuatBan());
        tfNamsuatban.setText(String.valueOf(BK.getNamXuatBan()));
        tfSoluong.setText(String.valueOf(BK.getSoluong()));
        tpMota.setText(BK.getMota());

    }

    Connect ketnoi = new Connect();
    Connection conn = ketnoi.getConnection();

    public void loadmaTheLoai() {
        cbTheloai.removeAllItems();
        cbTheloai.addItem("Mã thể loại");
        String sql = "SELECT maTheloai FROM Theloai";

        try {
            Statement statement = conn.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            while (rs.next()) {
                this.cbTheloai.addItem(rs.getString(1));
            }
        } catch (SQLException e) {

        }
    }

    public void loadmaDanhMuc() {
        cbDanhmuc.removeAllItems();
        cbDanhmuc.addItem("Mã danh mục");
        String sql = "SELECT maDanhmuc FROM Danhmuc";
        try {
            Statement statement = conn.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            while (rs.next()) {
                this.cbDanhmuc.addItem(rs.getString(1));
            }
        } catch (SQLException e) {

        }
    }

    public void filldataTableDSPhieumuon() {
        try {
            DefaultTableModel Model = (DefaultTableModel) TableDSPhieumuon.getModel();
            Model.setRowCount(0);
            for (Phieumuon pm : CtrPM.CtrgetallPM()) {
                Model.addRow(new Object[]{pm.getMaPhieumuon(), pm.getMaDocgia(), pm.getMaThuthu(), pm.getSongaymuon(), pm.getGhichu(), pm.getTrangthai()});
            }
        } catch (Exception e) {
        }
    }

    public void filldataTableSach() {
        DefaultTableModel Model = (DefaultTableModel) TableSach.getModel();
        Model.setRowCount(0);
        for (Sach BK : CtrSach.CtrgetAllSach()) {
            Object DataRow[] = new Object[8];
            DataRow[0] = BK.getMaSach();
            DataRow[1] = BK.getTenSach();
            DataRow[2] = BK.getMaDanhMuc();
            DataRow[3] = BK.getMaTheLoai();
            DataRow[4] = BK.getTacgia();
            DataRow[5] = BK.getNhaXuatBan();
            DataRow[6] = BK.getNamXuatBan();
            DataRow[7] = BK.getSoluong();

            Model.addRow(DataRow);
        }
    }

    // GD 2 - 1
    public void loadcbmaDocgia_PM() {
        cbMaDocgia_PM.removeAllItems();
        cbMaDocgia_PM.addItem("Chọn mã độc giả");
        String sql = "SELECT * from Docgia";
        try {
            Statement statement = conn.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            while (rs.next()) {
                this.cbMaDocgia_PM.addItem(rs.getString(1));
            }
        } catch (SQLException e) {

        }
    }

    // GD 2 - 2
    public int KiemtraSachdangmuon(String text) {
        DefaultTableModel Model = (DefaultTableModel) TableCTphieumuon.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(Model);
        sorter.setRowFilter(RowFilter.regexFilter(text));
        return sorter.getViewRowCount();
    }

    public boolean KiemtraSLmuon(String masach) {
        DefaultTableModel Model = (DefaultTableModel) TableCTphieumuon.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(Model);
        sorter.setRowFilter(RowFilter.regexFilter(masach));
        return sorter.getViewRowCount() != 0;
    }

    public boolean ValidateForm_CTPM() {
        return ((cbMaSach_CTPM.getItemAt(0).equals(cbMaSach_CTPM.getSelectedItem().toString()))
                || tfTenSachCTpm.getText().isEmpty());
    }

    public void lockCTPM(boolean bool) {
        cbMaSach_CTPM.setEnabled(bool);
        tfTenSachCTpm.setEnabled(bool);
        dcNgaymuon.setEnabled(bool);
    }

    public ChitietPhieuMuon getModelCTPM() {
        java.util.Date dateNgaymuon = (java.util.Date) dcNgaymuon.getDate();
        java.util.Date dateNgaytradukien = (java.util.Date) dcNgaytradukien.getDate();
        java.util.Date dateNgaytrathucte = (java.util.Date) dcNgaytrathucte.getDate();

        Phieumuon pm = CtrPM.CtrgetPMbymaPM(maPMdcchon);

        ChitietPhieuMuon ctpm = new ChitietPhieuMuon();

        ctpm.setMaPhieumuon(maPMdcchon);

        if (cbMaSach_CTPM.getItemAt(0).equals(cbMaSach_CTPM.getSelectedItem().toString())) {
            return null;
        } else {
            ctpm.setMaSach(cbMaSach_CTPM.getSelectedItem().toString());
        }

        ctpm.setTenSach(tfTenSachCTpm.getText());
        if (dateNgaymuon != null) {
            ctpm.setNgaymuon(getSQLdate(dateNgaymuon));
            ctpm.setNgaytradukien(getSQLdate(dateNgaytradukien));
        } else {
            return null;
        }
        if (dateNgaytrathucte != null) {
            ctpm.setNgaytrathucte(getSQLdate(dateNgaytrathucte));
        } else {
            ctpm.setNgaytrathucte(null);
        }

        ctpm.setTienphat(Integer.valueOf(tfTienphat.getText()) + Integer.valueOf(tfTienphatmuon.getText()));
        ctpm.setTinhtrang(cbTinhtrangSach.getSelectedItem().toString());

        if (cbXacnhanmuon.getSelectedItem().toString().equalsIgnoreCase(cbXacnhanmuon.getItemAt(0))) {
            JOptionPane.showMessageDialog(this, "Cập nhận xác nhận mượn, vui lòng thử lại", "", JOptionPane.PLAIN_MESSAGE);
            return null;
        } else {
            ctpm.setXetduyet(cbXacnhanmuon.getSelectedItem().toString());
        }
        return ctpm;
    }

    public void setModelCPM(ChitietPhieuMuon ctpm) {
        cbMaSach_CTPM.setSelectedItem(ctpm.getMaSach());

        dcNgaymuon.setDate(ctpm.getNgaymuon());
        dcNgaytradukien.setDate(ctpm.getNgaytradukien());
        dcNgaytrathucte.setDate(ctpm.getNgaytrathucte());
        if (ctpm.getTinhtrang() != null) {
            cbTinhtrangSach.setSelectedItem(ctpm.getTinhtrang());
        } else {
            cbTinhtrangSach.setSelectedIndex(0);
        }

        cbXacnhanmuon.setSelectedItem(ctpm.getXetduyet());

    }

    public void khoamuonthem() {
        int row = TableCTphieumuon.getRowCount();
        if (row == 3) {
            btnMuonthem.setEnabled(false);
            btnMuonthem.setText("Hết lượt mượn");
        } else {
            btnMuonthem.setText("Mượn thêm");
            btnMuonthem.setEnabled(true);
        }
    }

    public void setTienphat() {
        if (check) {
            String cbhientai = cbTinhtrangSach.getSelectedItem().toString();
            if (cbhientai != null) {
                switch (cbhientai) {
                    case "Bình thường" ->
                        tfTienphat.setText("0");
                    case "Hư Sách" ->
                        tfTienphat.setText("25000");
                    case "Mất Sách" ->
                        tfTienphat.setText("60000");
                    default -> {
                    }
                }
            } else {
                cbTinhtrangSach.setSelectedIndex(0);
            }
        }
    }

    public void loadcbmaSach_CTPM() {
        cbMaSach_CTPM.removeAllItems();
        cbMaSach_CTPM.addItem("Chọn mã Sách");
        String sql = "SELECT * from Sach";
        try {
            Statement statement = conn.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            while (rs.next()) {
                this.cbMaSach_CTPM.addItem(rs.getString(1));
            }
        } catch (SQLException e) {

        }
    }

    public void filldatatableCTDSmuon() {
        DefaultTableModel Model = (DefaultTableModel) TableCTphieumuon.getModel();
        List<ChitietPhieuMuon> dsmuon = CtrCTPM.CtrDSChitietPhieumuon(maPMdcchon);
        Model.setRowCount(0);
        for (ChitietPhieuMuon muon : dsmuon) {
            Model.addRow(new Object[]{muon.getMaSach(), muon.getTenSach(), getSQLDateform(muon.getNgaymuon()), getSQLDateform(muon.getNgaytradukien()), getSQLDateform(muon.getNgaytrathucte()), muon.getTienphat(), muon.getTinhtrang(), muon.getXetduyet()});
        }

    }

    // GD 3 - Quản lý độc giả
    public void filldataTableDocgia() {
        DefaultTableModel Model = (DefaultTableModel) tblDocgia.getModel();
        Model.setRowCount(0);

        for (DocGia dg : CtrDG.CtrgetallDG()) {

            Model.addRow(new Object[]{dg.getMaDocgia(), dg.getTenDocgia(), getSQLDateform(dg.getNgaysinh()), dg.getGioitinh(), dg.getMail(), dg.getSdt(), dg.getMaTaikhoan()});
        }

    }

    public Boolean ValidateForm_RI() {
        return !(tfMaDocgia.getText().isEmpty() || tftenDocgia.getText().isEmpty());
    }

    public void setgenderbutton() {
        btnGender.add(RdoNu);
        btnGender.add(rdoNam);
    }

    public int getGroupGenderBtn() {
        if (rdoNam.isSelected()) {
            return 0;
        } else {
            return 1;
        }
    }

    public void setGroupGenderBtn(int Gender) {
        if (Gender == 0) {
            rdoNam.setSelected(true);
        } else {
            RdoNu.setSelected(true);
        }
    }

    public void lockDG(boolean bool) {

        tftenDocgia.setEnabled(bool);
        dcNgaysinh.setEnabled(bool);
        RdoNu.setEnabled(bool);
        rdoNam.setEnabled(bool);
        tfDG_Mail.setEnabled(bool);
        tfDG_SDT.setEnabled(bool);

        tfTaikhoan.setEnabled(bool);
        tfMatkhau.setEnabled(bool);
        rdoCam.setEnabled(bool);
        tfLuotmuon.setEnabled(bool);
    }

    public DocGia getModeldocgia() {
        DocGia dg = new DocGia();

        dg.setMaDocgia(tfMaDocgia.getText());
        dg.setTenDocgia(tftenDocgia.getText());
        if (dcNgaysinh.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Thiếu thông tin thực hiện lệnh", "", JOptionPane.PLAIN_MESSAGE);
            return null;
        } else {
            dg.setNgaysinh(getSQLdate(dcNgaysinh.getDate()));
        }
        dg.setGioitinh(getGroupGenderBtn());
        dg.setMail(tfDG_Mail.getText());
        dg.setSdt(tfDG_SDT.getText());
        dg.setMaTaikhoan(tfMaTK.getText());

        return dg;
    }

    public void lockbtnDG(boolean bool) {
        btnSuaDG.setEnabled(bool);
        btnCam.setEnabled(bool);
    }

    public Taikhoan getmodelTaikhoan() {
        Taikhoan tk = new Taikhoan();
        tk.setMaTaikhoan(tfMaTK.getText());
        tk.setTenDangnhap(tfTaikhoan.getText());
        tk.setChucvu("Độc giả");
        tk.setMatkhau(tfMatkhau.getText());
        tk.setSoluongmuon(Integer.valueOf(tfLuotmuon.getText()));
        return tk;
    }

    public void setmodelGD_TK(DocGia DH, Taikhoan tk) {
        tfMaDocgia.setText(DH.getMaDocgia());
        tftenDocgia.setText(DH.getTenDocgia());
        dcNgaysinh.setDate(DH.getNgaysinh());
        setGroupGenderBtn(DH.getGioitinh());
        tfDG_Mail.setText(DH.getMail());
        tfDG_SDT.setText(DH.getSdt());
        tfMaTK.setText(DH.getMaTaikhoan());
        tfTaikhoan.setText(tk.getTenDangnhap());
        tfMatkhau.setText(tk.getMatkhau());
        if (tk.getCam() == 1) {
            rdoCam.setSelected(true);
        } else {
            rdoCam.setSelected(false);
        }

        tfLuotmuon.setText(String.valueOf(tk.getSoluongmuon()));
    }

    public void setmodelGD_TKnull(DocGia DH, Taikhoan tk) {
        tfMaDocgia.setText("");
        tftenDocgia.setText("");
        dcNgaysinh.setDate(null);
        rdoNam.setSelected(false);
        RdoNu.setSelected(false);
        tfDG_Mail.setText("");
        tfDG_SDT.setText("");
        tfMaTK.setText("");
        tfTaikhoan.setText("");
        tfMatkhau.setText("");
        rdoCam.setSelected(false);

        tfLuotmuon.setText("");
    }
    private final javax.swing.ButtonGroup btnGender;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Jcollpane;
    private javax.swing.JRadioButton RdoNu;
    private javax.swing.JTable TableCTphieumuon;
    private javax.swing.JTable TableDSPhieumuon;
    private javax.swing.JTable TableSach;
    private javax.swing.JButton btnCam;
    private javax.swing.JButton btnCapnhat;
    private javax.swing.JButton btnDangsuat;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnGhichu;
    private javax.swing.JButton btnHienthiCTpm;
    private javax.swing.JButton btnLammoiCTpm;
    private javax.swing.JButton btnLammoiDG;
    private javax.swing.JButton btnMuonthem;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSuaDG;
    private javax.swing.JButton btnThemDocgia;
    private javax.swing.JButton btnThemSach;
    private javax.swing.JButton btnThemphieumuon;
    private javax.swing.JButton btnXacnhan;
    private javax.swing.JButton btnXoamuon;
    private javax.swing.JComboBox<String> cbDanhmuc;
    private javax.swing.JComboBox<String> cbMaDocgia_PM;
    private javax.swing.JComboBox<String> cbMaSach_CTPM;
    private javax.swing.JComboBox<String> cbSongaymuon;
    private javax.swing.JComboBox<String> cbTKDG;
    private javax.swing.JComboBox<String> cbTheloai;
    private javax.swing.JComboBox<String> cbTinhtrangSach;
    private javax.swing.JComboBox<String> cbXacnhanmuon;
    private com.toedter.calendar.JDateChooser dcNgaymuon;
    private com.toedter.calendar.JDateChooser dcNgaysinh;
    private com.toedter.calendar.JDateChooser dcNgaytradukien;
    private com.toedter.calendar.JDateChooser dcNgaytrathucte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lbMaCTphieumuon;
    private javax.swing.JPanel ooo;
    private javax.swing.JRadioButton rdoCam;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JTable tblDocgia;
    private javax.swing.JTable tblTK;
    private javax.swing.JTextField tfDG_Mail;
    private javax.swing.JTextField tfDG_SDT;
    private javax.swing.JTextField tfDanhmuc;
    private javax.swing.JTextField tfLuotmuon;
    private javax.swing.JTextField tfMaDocgia;
    private javax.swing.JTextField tfMaTK;
    private javax.swing.JTextField tfMatkhau;
    private javax.swing.JTextField tfNamsuatban;
    private javax.swing.JTextField tfNhaxuatban;
    private javax.swing.JTextField tfSoluong;
    private javax.swing.JTextField tfTacgia;
    private javax.swing.JTextField tfTaikhoan;
    private javax.swing.JTextField tfTenSachCTpm;
    private javax.swing.JTextField tfTienphat;
    private javax.swing.JTextField tfTienphatmuon;
    private javax.swing.JTextField tfmaSach;
    private javax.swing.JTextField tftenDocGia_PM;
    private javax.swing.JTextField tftenDocgia;
    private javax.swing.JTextField tftenSach;
    private javax.swing.JTextField tftheloai;
    private javax.swing.JTextPane tpMota;
    // End of variables declaration//GEN-END:variables
}
